{"version":3,"file":"getSigningKey.mjs","sources":["../../../../../../../../src/clients/middleware/signing/signer/signatureV4/utils/getSigningKey.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants';\nimport { getHashedData } from './dataHashHelpers';\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nexport const getSigningKey = (secretAccessKey, date, region, service) => {\n    const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n    const dateKey = getHashedData(key, date);\n    const regionKey = getHashedData(dateKey, region);\n    const serviceKey = getHashedData(regionKey, service);\n    const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n    return signingKey;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,aAAa,GAAG,CAAC,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,KAAK;AACzE,IAAI,MAAM,GAAG,GAAG,CAAC,EAAE,oBAAoB,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;AAC5D,IAAI,MAAM,OAAO,GAAG,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC7C,IAAI,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACrD,IAAI,MAAM,UAAU,GAAG,aAAa,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACzD,IAAI,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;AACtE,IAAI,OAAO,UAAU,CAAC;AACtB;;;;"}