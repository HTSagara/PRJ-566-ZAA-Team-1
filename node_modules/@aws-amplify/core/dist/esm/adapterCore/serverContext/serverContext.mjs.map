{"version":3,"file":"serverContext.mjs","sources":["../../../../src/adapterCore/serverContext/serverContext.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyClass } from '../../singleton';\nimport { AmplifyServerContextError } from '../error';\nimport { serverContextRegistry } from './serverContextRegistry';\n/**\n * Creates an Amplify server context.\n * @param amplifyConfig The Amplify resource config.\n * @param libraryOptions The Amplify library options.\n * @returns The Amplify server context spec.\n */\nexport const createAmplifyServerContext = (amplifyConfig, libraryOptions) => {\n    const amplify = new AmplifyClass();\n    amplify.configure(amplifyConfig, libraryOptions);\n    return serverContextRegistry.register({\n        amplify,\n    });\n};\n/**\n * Returns an Amplify server context.\n * @param contextSpec The context spec used to get the Amplify server context.\n * @returns The Amplify server context.\n */\nexport const getAmplifyServerContext = (contextSpec) => {\n    assertContextSpec(contextSpec);\n    const context = serverContextRegistry.get(contextSpec);\n    if (context) {\n        return context;\n    }\n    throw new AmplifyServerContextError({\n        message: 'Attempted to get the Amplify Server Context that may have been destroyed.',\n        recoverySuggestion: 'Ensure always call Amplify APIs within `runWithAmplifyServerContext` function, and do not attempt to reuse `contextSpec` object.',\n    });\n};\n/**\n * Destroys an Amplify server context.\n * @param contextSpec The context spec used to destroy the Amplify server context.\n */\nexport const destroyAmplifyServerContext = (contextSpec) => {\n    serverContextRegistry.deregister(contextSpec);\n};\nconst assertContextSpec = (contextSpec) => {\n    let invalid = false;\n    if (!Object.prototype.hasOwnProperty.call(contextSpec, 'token')) {\n        invalid = true;\n    }\n    else if (!Object.prototype.hasOwnProperty.call(contextSpec.token, 'value')) {\n        invalid = true;\n    }\n    else if (Object.prototype.toString.call(contextSpec.token.value) !==\n        '[object Symbol]') {\n        invalid = true;\n    }\n    if (invalid) {\n        throw new AmplifyServerContextError({\n            message: 'Invalid `contextSpec`.',\n            recoverySuggestion: 'Ensure to use the `contextSpec` object injected by `runWithAmplifyServerContext` function.',\n        });\n    }\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,0BAA0B,GAAG,CAAC,aAAa,EAAE,cAAc,KAAK;AAC7E,IAAI,MAAM,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;AACvC,IAAI,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;AACrD,IAAI,OAAO,qBAAqB,CAAC,QAAQ,CAAC;AAC1C,QAAQ,OAAO;AACf,KAAK,CAAC,CAAC;AACP,EAAE;AACF;AACA;AACA;AACA;AACA;AACY,MAAC,uBAAuB,GAAG,CAAC,WAAW,KAAK;AACxD,IAAI,iBAAiB,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,MAAM,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC3D,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,IAAI,MAAM,IAAI,yBAAyB,CAAC;AACxC,QAAQ,OAAO,EAAE,2EAA2E;AAC5F,QAAQ,kBAAkB,EAAE,kIAAkI;AAC9J,KAAK,CAAC,CAAC;AACP,EAAE;AACF;AACA;AACA;AACA;AACY,MAAC,2BAA2B,GAAG,CAAC,WAAW,KAAK;AAC5D,IAAI,qBAAqB,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAClD,EAAE;AACF,MAAM,iBAAiB,GAAG,CAAC,WAAW,KAAK;AAC3C,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC;AACxB,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE;AACrE,QAAQ,OAAO,GAAG,IAAI,CAAC;AACvB,KAAK;AACL,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;AAChF,QAAQ,OAAO,GAAG,IAAI,CAAC;AACvB,KAAK;AACL,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;AACpE,QAAQ,iBAAiB,EAAE;AAC3B,QAAQ,OAAO,GAAG,IAAI,CAAC;AACvB,KAAK;AACL,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,MAAM,IAAI,yBAAyB,CAAC;AAC5C,YAAY,OAAO,EAAE,wBAAwB;AAC7C,YAAY,kBAAkB,EAAE,4FAA4F;AAC5H,SAAS,CAAC,CAAC;AACX,KAAK;AACL,CAAC;;;;"}