{"version":3,"file":"cacheTokens.js","sources":["../../../../../src/providers/cognito/tokenProvider/cacheTokens.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cacheCognitoTokens = void 0;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst tokenProvider_1 = require(\"./tokenProvider\");\nasync function cacheCognitoTokens(AuthenticationResult) {\n    if (AuthenticationResult.AccessToken) {\n        const accessToken = (0, utils_1.decodeJWT)(AuthenticationResult.AccessToken);\n        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n        const currentTime = new Date().getTime();\n        const clockDrift = accessTokenIssuedAtInMillis > 0\n            ? accessTokenIssuedAtInMillis - currentTime\n            : 0;\n        let idToken;\n        let refreshToken;\n        let deviceMetadata;\n        if (AuthenticationResult.RefreshToken) {\n            refreshToken = AuthenticationResult.RefreshToken;\n        }\n        if (AuthenticationResult.IdToken) {\n            idToken = (0, utils_1.decodeJWT)(AuthenticationResult.IdToken);\n        }\n        if (AuthenticationResult?.NewDeviceMetadata) {\n            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n        }\n        const tokens = {\n            accessToken,\n            idToken,\n            refreshToken,\n            clockDrift,\n            deviceMetadata,\n            username: AuthenticationResult.username,\n        };\n        if (AuthenticationResult?.signInDetails) {\n            tokens.signInDetails = AuthenticationResult.signInDetails;\n        }\n        await tokenProvider_1.tokenOrchestrator.setTokens({\n            tokens,\n        });\n    }\n    else {\n        // This would be a service error\n        throw new utils_1.AmplifyError({\n            message: 'Invalid tokens',\n            name: 'InvalidTokens',\n            recoverySuggestion: 'Check Cognito UserPool settings',\n        });\n    }\n}\nexports.cacheCognitoTokens = cacheCognitoTokens;\n"],"names":[],"mappings":";;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;AACpC;AACA;AACA,MAAM,OAAO,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAC7D,MAAM,eAAe,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACnD,eAAe,kBAAkB,CAAC,oBAAoB,EAAE;AACxD,IAAI,IAAI,oBAAoB,CAAC,WAAW,EAAE;AAC1C,QAAQ,MAAM,WAAW,GAAG,IAAI,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACrF,QAAQ,MAAM,2BAA2B,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;AAClF,QAAQ,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;AACjD,QAAQ,MAAM,UAAU,GAAG,2BAA2B,GAAG,CAAC;AAC1D,cAAc,2BAA2B,GAAG,WAAW;AACvD,cAAc,CAAC,CAAC;AAChB,QAAQ,IAAI,OAAO,CAAC;AACpB,QAAQ,IAAI,YAAY,CAAC;AACzB,QAAQ,IAAI,cAAc,CAAC;AAC3B,QAAQ,IAAI,oBAAoB,CAAC,YAAY,EAAE;AAC/C,YAAY,YAAY,GAAG,oBAAoB,CAAC,YAAY,CAAC;AAC7D,SAAS;AACT,QAAQ,IAAI,oBAAoB,CAAC,OAAO,EAAE;AAC1C,YAAY,OAAO,GAAG,IAAI,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC;AAC3E,SAAS;AACT,QAAQ,IAAI,oBAAoB,EAAE,iBAAiB,EAAE;AACrD,YAAY,cAAc,GAAG,oBAAoB,CAAC,iBAAiB,CAAC;AACpE,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG;AACvB,YAAY,WAAW;AACvB,YAAY,OAAO;AACnB,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,cAAc;AAC1B,YAAY,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACnD,SAAS,CAAC;AACV,QAAQ,IAAI,oBAAoB,EAAE,aAAa,EAAE;AACjD,YAAY,MAAM,CAAC,aAAa,GAAG,oBAAoB,CAAC,aAAa,CAAC;AACtE,SAAS;AACT,QAAQ,MAAM,eAAe,CAAC,iBAAiB,CAAC,SAAS,CAAC;AAC1D,YAAY,MAAM;AAClB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,SAAS;AACT;AACA,QAAQ,MAAM,IAAI,OAAO,CAAC,YAAY,CAAC;AACvC,YAAY,OAAO,EAAE,gBAAgB;AACrC,YAAY,IAAI,EAAE,eAAe;AACjC,YAAY,kBAAkB,EAAE,iCAAiC;AACjE,SAAS,CAAC,CAAC;AACX,KAAK;AACL,CAAC;AACD,OAAO,CAAC,kBAAkB,GAAG,kBAAkB;;"}