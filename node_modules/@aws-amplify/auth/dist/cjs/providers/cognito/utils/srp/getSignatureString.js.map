{"version":3,"file":"getSignatureString.js","sources":["../../../../../../src/providers/cognito/utils/srp/getSignatureString.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSignatureString = void 0;\nconst sha256_js_1 = require(\"@aws-crypto/sha256-js\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst textEncoder_1 = require(\"../textEncoder\");\nconst getSignatureString = ({ userPoolName, username, challengeParameters, dateNow, hkdf, }) => {\n    const bufUPIDaToB = textEncoder_1.textEncoder.convert(userPoolName);\n    const bufUNaToB = textEncoder_1.textEncoder.convert(username);\n    const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n    const bufDNaToB = textEncoder_1.textEncoder.convert(dateNow);\n    const bufConcat = new Uint8Array(bufUPIDaToB.byteLength +\n        bufUNaToB.byteLength +\n        bufSBaToB.byteLength +\n        bufDNaToB.byteLength);\n    bufConcat.set(bufUPIDaToB, 0);\n    bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n    bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n    bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n    const awsCryptoHash = new sha256_js_1.Sha256(hkdf);\n    awsCryptoHash.update(bufConcat);\n    const resultFromAWSCrypto = awsCryptoHash.digestSync();\n    const signatureString = utils_1.base64Encoder.convert(resultFromAWSCrypto);\n    return signatureString;\n};\nexports.getSignatureString = getSignatureString;\nconst urlB64ToUint8Array = (base64String) => {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = utils_1.base64Decoder.convert(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n};\n"],"names":[],"mappings":"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"}