{"version":3,"file":"getRedirectUrl.native.mjs","sources":["../../../../../../src/providers/cognito/utils/oauth/getRedirectUrl.native.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { invalidAppSchemeException, invalidPreferredRedirectUrlException, } from '../../../../errors/constants';\n/**\n* - Validate there is always an appScheme (required), if not throw invalidAppSchemeException.\n* - If a preferredRedirectUrl is given, validate it's in the configured list, if not throw invalidPreferredRedirectUrlException.\n* - If preferredRedirectUrl is not given, use the appScheme which is present in the configured list.\n@internal */\nexport function getRedirectUrl(redirects, preferredRedirectUrl) {\n    // iOS always requires a non http/s url (appScheme) to be registered so we validate it's existence here.\n    const appSchemeRedirectUrl = redirects?.find(redirect => !redirect.startsWith('http://') && !redirect.startsWith('https://'));\n    if (!appSchemeRedirectUrl) {\n        throw invalidAppSchemeException;\n    }\n    if (preferredRedirectUrl) {\n        if (redirects?.includes(preferredRedirectUrl)) {\n            return preferredRedirectUrl;\n        }\n        throw invalidPreferredRedirectUrlException;\n    }\n    return appSchemeRedirectUrl;\n}\n"],"names":[],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,SAAS,EAAE,oBAAoB,EAAE;AAChE;AACA,IAAI,MAAM,oBAAoB,GAAG,SAAS,EAAE,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAClI,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC/B,QAAQ,MAAM,yBAAyB,CAAC;AACxC,KAAK;AACL,IAAI,IAAI,oBAAoB,EAAE;AAC9B,QAAQ,IAAI,SAAS,EAAE,QAAQ,CAAC,oBAAoB,CAAC,EAAE;AACvD,YAAY,OAAO,oBAAoB,CAAC;AACxC,SAAS;AACT,QAAQ,MAAM,oCAAoC,CAAC;AACnD,KAAK;AACL,IAAI,OAAO,oBAAoB,CAAC;AAChC;;;;"}