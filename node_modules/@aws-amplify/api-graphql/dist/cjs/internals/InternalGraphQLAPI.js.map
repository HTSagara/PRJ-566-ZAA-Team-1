{"version":3,"file":"InternalGraphQLAPI.js","sources":["../../../src/internals/InternalGraphQLAPI.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalGraphQLAPI = exports.InternalGraphQLAPIClass = void 0;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst graphql_1 = require(\"graphql\");\nconst rxjs_1 = require(\"rxjs\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst api_rest_1 = require(\"@aws-amplify/api-rest\");\nconst internals_1 = require(\"@aws-amplify/api-rest/internals\");\nconst AWSAppSyncRealTimeProvider_1 = require(\"../Providers/AWSAppSyncRealTimeProvider\");\nconst utils_2 = require(\"../utils\");\nconst repackageAuthError_1 = require(\"../utils/errors/repackageAuthError\");\nconst constants_1 = require(\"../utils/errors/constants\");\nconst errors_1 = require(\"../utils/errors\");\nconst isGraphQLResponseWithErrors_1 = require(\"./utils/runtimeTypeGuards/isGraphQLResponseWithErrors\");\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\nconst isAmplifyInstance = (amplify) => {\n    return typeof amplify !== 'function';\n};\n/**\n * Export Cloud Logic APIs\n */\nclass InternalGraphQLAPIClass {\n    constructor() {\n        /**\n         * @private\n         */\n        this.appSyncRealTime = new AWSAppSyncRealTimeProvider_1.AWSAppSyncRealTimeProvider();\n        this._api = {\n            post: internals_1.post,\n            cancelREST: internals_1.cancel,\n            isCancelErrorREST: api_rest_1.isCancelError,\n            updateRequestToBeCancellable: internals_1.updateRequestToBeCancellable,\n        };\n    }\n    getModuleName() {\n        return 'InternalGraphQLAPI';\n    }\n    async _headerBasedAuth(amplify, authMode, additionalHeaders = {}) {\n        const { apiKey } = (0, utils_2.resolveConfig)(amplify);\n        let headers = {};\n        switch (authMode) {\n            case 'apiKey':\n                if (!apiKey) {\n                    throw new errors_1.GraphQLApiError(constants_1.NO_API_KEY);\n                }\n                headers = {\n                    'X-Api-Key': apiKey,\n                };\n                break;\n            case 'iam': {\n                const session = await amplify.Auth.fetchAuthSession();\n                if (session.credentials === undefined) {\n                    throw new errors_1.GraphQLApiError(constants_1.NO_VALID_CREDENTIALS);\n                }\n                break;\n            }\n            case 'oidc':\n            case 'userPool': {\n                let token;\n                try {\n                    token = (await amplify.Auth.fetchAuthSession()).tokens?.accessToken.toString();\n                }\n                catch (e) {\n                    // fetchAuthSession failed\n                    throw new errors_1.GraphQLApiError({\n                        ...constants_1.NO_SIGNED_IN_USER,\n                        underlyingError: e,\n                    });\n                }\n                // `fetchAuthSession()` succeeded but didn't return `tokens`.\n                // This may happen when unauthenticated access is enabled and there is\n                // no user signed in.\n                if (!token) {\n                    throw new errors_1.GraphQLApiError(constants_1.NO_VALID_AUTH_TOKEN);\n                }\n                headers = {\n                    Authorization: token,\n                };\n                break;\n            }\n            case 'lambda':\n                if (typeof additionalHeaders === 'object' &&\n                    !additionalHeaders.Authorization) {\n                    throw new errors_1.GraphQLApiError(constants_1.NO_AUTH_TOKEN_HEADER);\n                }\n                headers = {\n                    Authorization: additionalHeaders.Authorization,\n                };\n                break;\n            case 'none':\n                break;\n            default:\n                break;\n        }\n        return headers;\n    }\n    /**\n     * to get the operation type\n     * @param operation\n     */\n    getGraphqlOperationType(operation) {\n        const doc = (0, graphql_1.parse)(operation);\n        const definitions = doc.definitions;\n        const [{ operation: operationType }] = definitions;\n        return operationType;\n    }\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param options - GraphQL Options\n     * @param [additionalHeaders] - headers to merge in after any `libraryConfigHeaders` set in the config\n     * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n     */\n    graphql(amplify, { query: paramQuery, variables = {}, authMode, authToken }, additionalHeaders, customUserAgentDetails) {\n        const query = typeof paramQuery === 'string'\n            ? (0, graphql_1.parse)(paramQuery)\n            : (0, graphql_1.parse)((0, graphql_1.print)(paramQuery));\n        const [operationDef = {}] = query.definitions.filter(def => def.kind === 'OperationDefinition');\n        const { operation: operationType } = operationDef;\n        const headers = additionalHeaders || {};\n        switch (operationType) {\n            case 'query':\n            case 'mutation': {\n                const abortController = new AbortController();\n                let responsePromise;\n                if (isAmplifyInstance(amplify)) {\n                    responsePromise = this._graphql(amplify, { query, variables, authMode }, headers, abortController, customUserAgentDetails, authToken);\n                }\n                else {\n                    // NOTE: this wrapper function must be await-able so the Amplify server context manager can\n                    // destroy the context only after it completes\n                    const wrapper = async (amplifyInstance) => {\n                        const result = await this._graphql(amplifyInstance, { query, variables, authMode }, headers, abortController, customUserAgentDetails, authToken);\n                        return result;\n                    };\n                    responsePromise = amplify(wrapper);\n                }\n                this._api.updateRequestToBeCancellable(responsePromise, abortController);\n                return responsePromise;\n            }\n            case 'subscription':\n                return this._graphqlSubscribe(amplify, { query, variables, authMode }, headers, customUserAgentDetails, authToken);\n            default:\n                throw new Error(`invalid operation type: ${operationType}`);\n        }\n    }\n    async _graphql(amplify, { query, variables, authMode: explicitAuthMode }, additionalHeaders = {}, abortController, customUserAgentDetails, authToken) {\n        const { region, endpoint: appSyncGraphqlEndpoint, customEndpoint, customEndpointRegion, defaultAuthMode, } = (0, utils_2.resolveConfig)(amplify);\n        const initialAuthMode = explicitAuthMode || defaultAuthMode || 'iam';\n        // identityPool is an alias for iam. TODO: remove 'iam' in v7\n        const authMode = initialAuthMode === 'identityPool' ? 'iam' : initialAuthMode;\n        /**\n         * Retrieve library options from Amplify configuration.\n         * `customHeaders` here are from the Amplify configuration options,\n         * and are for non-AppSync endpoints only. These are *not* the same as\n         * `additionalHeaders`, which are custom headers that are either 1)\n         * included when configuring the API client or 2) passed along with\n         * individual requests.\n         */\n        const { headers: customHeaders, withCredentials } = (0, utils_2.resolveLibraryOptions)(amplify);\n        /**\n         * Client or request-specific custom headers that may or may not be\n         * returned by a function:\n         */\n        let additionalCustomHeaders;\n        if (typeof additionalHeaders === 'function') {\n            const requestOptions = {\n                method: 'POST',\n                url: new utils_1.AmplifyUrl(customEndpoint || appSyncGraphqlEndpoint || '').toString(),\n                queryString: (0, graphql_1.print)(query),\n            };\n            additionalCustomHeaders = await additionalHeaders(requestOptions);\n        }\n        else {\n            additionalCustomHeaders = additionalHeaders;\n        }\n        // if an authorization header is set, have the explicit authToken take precedence\n        if (authToken) {\n            additionalCustomHeaders = {\n                ...additionalCustomHeaders,\n                Authorization: authToken,\n            };\n        }\n        // TODO: Figure what we need to do to remove `!`'s.\n        const headers = {\n            ...(!customEndpoint &&\n                (await this._headerBasedAuth(amplify, authMode, additionalCustomHeaders))),\n            /**\n             * Custom endpoint headers.\n             * If there is both a custom endpoint and custom region present, we get the headers.\n             * If there is a custom endpoint but no region, we return an empty object.\n             * If neither are present, we return an empty object.\n             */\n            ...((customEndpoint &&\n                (customEndpointRegion\n                    ? await this._headerBasedAuth(amplify, authMode, additionalCustomHeaders)\n                    : {})) ||\n                {}),\n            // Custom headers included in Amplify configuration options:\n            ...(customHeaders &&\n                (await customHeaders({\n                    query: (0, graphql_1.print)(query),\n                    variables,\n                }))),\n            // Custom headers from individual requests or API client configuration:\n            ...additionalCustomHeaders,\n            // User agent headers:\n            ...(!customEndpoint && {\n                [USER_AGENT_HEADER]: (0, utils_1.getAmplifyUserAgent)(customUserAgentDetails),\n            }),\n        };\n        const body = {\n            query: (0, graphql_1.print)(query),\n            variables: variables || null,\n        };\n        let signingServiceInfo;\n        /**\n         * We do not send the signing service info to the REST API under the\n         * following conditions (i.e. it will not sign the request):\n         *   - there is a custom endpoint but no region\n         *   - the auth mode is `none`, or `apiKey`\n         *   - the auth mode is a type other than the types listed below\n         */\n        if ((customEndpoint && !customEndpointRegion) ||\n            (authMode !== 'oidc' &&\n                authMode !== 'userPool' &&\n                authMode !== 'iam' &&\n                authMode !== 'lambda')) {\n            signingServiceInfo = undefined;\n        }\n        else {\n            signingServiceInfo = {\n                service: !customEndpointRegion ? 'appsync' : 'execute-api',\n                region: !customEndpointRegion ? region : customEndpointRegion,\n            };\n        }\n        const endpoint = customEndpoint || appSyncGraphqlEndpoint;\n        if (!endpoint) {\n            throw (0, errors_1.createGraphQLResultWithError)(new errors_1.GraphQLApiError(constants_1.NO_ENDPOINT));\n        }\n        let response;\n        try {\n            // See the inline doc of the REST `post()` API for possible errors to be thrown.\n            // As these errors are catastrophic they should be caught and handled by GraphQL\n            // API consumers.\n            const { body: responseBody } = await this._api.post(amplify, {\n                url: new utils_1.AmplifyUrl(endpoint),\n                options: {\n                    headers,\n                    body,\n                    signingServiceInfo,\n                    withCredentials,\n                },\n                abortController,\n            });\n            response = await responseBody.json();\n        }\n        catch (error) {\n            if (this.isCancelError(error)) {\n                throw error;\n            }\n            response = (0, errors_1.createGraphQLResultWithError)(error);\n        }\n        if ((0, isGraphQLResponseWithErrors_1.isGraphQLResponseWithErrors)(response)) {\n            throw (0, repackageAuthError_1.repackageUnauthorizedError)(response);\n        }\n        return response;\n    }\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    isCancelError(error) {\n        return this._api.isCancelErrorREST(error);\n    }\n    /**\n     * Cancels an inflight request. Only applicable for graphql queries and mutations\n     * @param {any} request - request to cancel\n     * @returns - A boolean indicating if the request was cancelled\n     */\n    cancel(request, message) {\n        return this._api.cancelREST(request, message);\n    }\n    _graphqlSubscribe(amplify, { query, variables, authMode: explicitAuthMode }, additionalHeaders = {}, customUserAgentDetails, authToken) {\n        const config = (0, utils_2.resolveConfig)(amplify);\n        const initialAuthMode = explicitAuthMode || config?.defaultAuthMode || 'iam';\n        // identityPool is an alias for iam. TODO: remove 'iam' in v7\n        const authMode = initialAuthMode === 'identityPool' ? 'iam' : initialAuthMode;\n        /**\n         * Retrieve library options from Amplify configuration.\n         * `libraryConfigHeaders` are from the Amplify configuration options,\n         * and will not be overwritten by other custom headers. These are *not*\n         * the same as `additionalHeaders`, which are custom headers that are\n         * either 1)included when configuring the API client or 2) passed along\n         * with individual requests.\n         */\n        const { headers: libraryConfigHeaders } = (0, utils_2.resolveLibraryOptions)(amplify);\n        return this.appSyncRealTime\n            .subscribe({\n            query: (0, graphql_1.print)(query),\n            variables,\n            appSyncGraphqlEndpoint: config?.endpoint,\n            region: config?.region,\n            authenticationType: authMode,\n            apiKey: config?.apiKey,\n            additionalHeaders,\n            authToken,\n            libraryConfigHeaders,\n        }, customUserAgentDetails)\n            .pipe((0, rxjs_1.catchError)(e => {\n            if (e.errors) {\n                throw (0, repackageAuthError_1.repackageUnauthorizedError)(e);\n            }\n            throw e;\n        }));\n    }\n}\nexports.InternalGraphQLAPIClass = InternalGraphQLAPIClass;\nexports.InternalGraphQLAPI = new InternalGraphQLAPIClass();\n"],"names":[],"mappings":"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"}