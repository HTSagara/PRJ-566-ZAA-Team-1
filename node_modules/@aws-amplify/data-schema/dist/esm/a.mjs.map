{"version":3,"file":"a.mjs","sources":["../../src/a.ts"],"sourcesContent":["import { schema } from './ModelSchema';\nimport { combine } from './CombineSchema';\nimport { model } from './ModelType';\nimport { id, string, integer, float, boolean, date, time, datetime, timestamp, email, json, phone, url, ipAddress, } from './ModelField';\nimport { ref } from './RefType';\nimport { hasOne, hasMany, belongsTo } from './ModelRelationshipField';\nimport { customType } from './CustomType';\nimport { enumType } from './EnumType';\nimport { query, mutation, subscription, generation } from './CustomOperation';\nimport { handler } from './Handler';\nimport { conversation } from './ai/ConversationType';\nimport { model as aiModel } from './ai/ModelType';\nconst ai = {\n    model: aiModel,\n};\n// We are re-exporting with this pattern to make the JSDoc happy.\n// Otherwise the JSDoc wouldn't consistently show up as a customer types\n// \"a.\"\nexport { schema, combine, model, ref, customType, enumType as enum, query, mutation, subscription, hasOne, hasMany, belongsTo, id, string, integer, float, boolean, date, time, datetime, timestamp, email, json, phone, url, ipAddress, conversation, generation, ai, handler, };\n"],"names":["aiModel"],"mappings":";;;;;;;;;;;;;AAYK,MAAC,EAAE,GAAG;AACX,IAAI,KAAK,EAAEA,KAAO;AAClB;;;;"}