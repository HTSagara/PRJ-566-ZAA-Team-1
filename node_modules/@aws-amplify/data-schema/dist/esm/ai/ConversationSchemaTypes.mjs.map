{"version":3,"file":"ConversationSchemaTypes.mjs","sources":["../../../src/ai/ConversationSchemaTypes.ts"],"sourcesContent":["import { capitalize } from '../runtime/utils';\nexport const createConversationField = (typeDef, typeName) => {\n    const { aiModel, systemPrompt, handler, tools } = typeDef;\n    const args = {\n        aiModel: aiModel.resourcePath,\n        // This is done to escape newlines in potentially multi-line system prompts\n        // e.g.\n        // realtorChat: a.conversation({\n        //   aiModel: a.ai.model('Claude 3 Haiku'),\n        //   systemPrompt: `You are a helpful real estate assistant\n        //   Respond in the poetic form of haiku.`,\n        // }),\n        //\n        // It doesn't affect non multi-line string inputs for system prompts\n        systemPrompt: systemPrompt.replace(/\\r?\\n/g, '\\\\n'),\n    };\n    const functionHandler = {};\n    if (handler) {\n        const functionName = `Fn${capitalize(typeName)}`;\n        args['functionName'] = functionName;\n        functionHandler[functionName] = handler;\n    }\n    const argsString = Object.entries(args)\n        .map(([key, value]) => `${key}: \"${value}\"`)\n        .join(', ');\n    const toolsString = tools?.length\n        ? `, tools: [${getConversationToolsString(tools)}]`\n        : '';\n    const conversationDirective = `@conversation(${argsString}${toolsString})`;\n    const field = `${typeName}(conversationId: ID!, content: [ContentBlockInput], aiContext: AWSJSON, toolConfiguration: ToolConfigurationInput): ConversationMessage ${conversationDirective} @aws_cognito_user_pools`;\n    return { field, functionHandler };\n};\nconst isRef = (query) => query?.data?.type === 'ref';\nconst getConversationToolsString = (tools) => tools\n    .map((tool) => {\n    const { query, description } = tool;\n    if (!isRef(query)) {\n        throw new Error(`Unexpected query was found in tool ${tool}.`);\n    }\n    // TODO: add validation for query / auth (cup) / etc\n    const queryName = query.data.link;\n    return `{ name: \"${queryName}\", description: \"${description}\" }`;\n})\n    .join(', ');\nconst ConversationParticipantRole = `enum ConversationParticipantRole {\n  user\n  assistant\n}`;\nconst ConversationMessage = `interface ConversationMessage {\n  id: ID!\n  conversationId: ID!\n  role: ConversationParticipantRole\n  content: [ContentBlock]\n  aiContext: AWSJSON\n  toolConfiguration: ToolConfiguration\n  createdAt: AWSDateTime\n  updatedAt: AWSDateTime\n  owner: String\n}`;\nconst DocumentBlockSourceInput = `input DocumentBlockSourceInput {\n  bytes: String\n}`;\nconst DocumentBlockInput = `input DocumentBlockInput {\n  format: String!\n  name: String!\n  source: DocumentBlockSourceInput!\n}`;\nconst ImageBlockSourceInput = `input ImageBlockSourceInput {\n  bytes: String\n}`;\nconst ImageBlockInput = `input ImageBlockInput {\n  format: String!\n  source: ImageBlockSourceInput!\n}`;\nconst ToolResultContentBlockInput = `input ToolResultContentBlockInput {\n  document: DocumentBlockInput\n  image: ImageBlockInput\n  json: AWSJSON\n  text: String\n}`;\nconst ToolResultBlockInput = `input ToolResultBlockInput {\n  content: [ToolResultContentBlockInput!]!\n  toolUseId: String!\n  status: String\n}`;\nconst DocumentBlockSource = `type DocumentBlockSource {\n  bytes: String\n}\n`;\nconst DocumentBlock = `type DocumentBlock {\n  format: String!\n  name: String!\n  source: DocumentBlockSource!\n}`;\nconst ImageBlock = `type ImageBlock {\n  format: String!\n  source: ImageBlockSource!\n}`;\nconst ImageBlockSource = `type ImageBlockSource {\n  bytes: String\n}`;\nconst ToolUseBlockInput = `input ToolUseBlockInput {\n  toolUseId: String!\n  name: String!\n  input: AWSJSON!\n}`;\nconst ToolUseBlock = `type ToolUseBlock {\n  toolUseId: String!\n  name: String!\n  input: AWSJSON!\n}`;\nconst ToolResultContentBlock = `type ToolResultContentBlock {\n  document: DocumentBlock\n  image: ImageBlock\n  json: AWSJSON\n  text: String\n}`;\nconst ToolResultBlock = `type ToolResultBlock {\n  content: [ToolResultContentBlock!]!\n  toolUseId: String!\n  status: String\n}`;\nconst ContentBlockText = `type ContentBlockText {\n  text: String\n}`;\nconst ContentBlockImage = `type ContentBlockImage {\n  image: ImageBlock\n}`;\nconst ContentBlockDocument = `type ContentBlockDocument {\n  document: DocumentBlock\n}`;\nconst ContentBlockToolUse = `type ContentBlockToolUse {\n  toolUse: ToolUseBlock\n}`;\nconst ContentBlockToolResult = `type ContentBlockToolResult {\n  toolResult: ToolResultBlock\n}`;\nconst ContentBlockInput = `input ContentBlockInput {\n  text: String\n  document: DocumentBlockInput\n  image: ImageBlockInput\n  toolResult: ToolResultBlockInput\n  toolUse: ToolUseBlockInput\n}`;\nconst ContentBlock = `type ContentBlock {\n  text: String\n  document: DocumentBlock\n  image: ImageBlock\n  toolResult: ToolResultBlock\n  toolUse: ToolUseBlock\n}`;\nconst ToolConfigurationInput = `input ToolConfigurationInput {\n  tools: [ToolInput]\n}`;\nconst ToolInput = `input ToolInput {\n  toolSpec: ToolSpecificationInput\n}`;\nconst ToolSpecificationInput = `input ToolSpecificationInput {\n  name: String!\n  description: String\n  inputSchema: ToolInputSchemaInput!\n}`;\nconst ToolInputSchemaInput = `input ToolInputSchemaInput {\n  json: AWSJSON\n}`;\nconst ToolConfiguration = `type ToolConfiguration {\n  tools: [Tool]\n}`;\nconst Tool = `type Tool {\n  toolSpec: ToolSpecification\n}`;\nconst ToolSpecification = `type ToolSpecification {\n  name: String!\n  description: String\n  inputSchema: ToolInputSchema!\n}`;\nconst ToolInputSchema = `type ToolInputSchema {\n  json: AWSJSON\n}`;\nexport const conversationTypes = [\n    ConversationParticipantRole,\n    ConversationMessage,\n    DocumentBlockSourceInput,\n    DocumentBlockInput,\n    ImageBlockSourceInput,\n    ImageBlockInput,\n    ToolUseBlockInput,\n    ToolResultContentBlockInput,\n    ToolResultBlockInput,\n    DocumentBlockSource,\n    DocumentBlock,\n    ImageBlock,\n    ImageBlockSource,\n    ToolUseBlock,\n    ToolResultContentBlock,\n    ToolResultBlock,\n    ContentBlockText,\n    ContentBlockImage,\n    ContentBlockDocument,\n    ContentBlockToolUse,\n    ContentBlockToolResult,\n    ContentBlockInput,\n    ContentBlock,\n    ToolConfigurationInput,\n    ToolInput,\n    ToolSpecificationInput,\n    ToolInputSchemaInput,\n    ToolConfiguration,\n    Tool,\n    ToolSpecification,\n    ToolInputSchema,\n];\n"],"names":[],"mappings":"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"}