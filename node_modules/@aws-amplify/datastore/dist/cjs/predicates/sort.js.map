{"version":3,"file":"sort.js","sources":["../../../src/predicates/sort.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ModelSortPredicateCreator = void 0;\nclass ModelSortPredicateCreator {\n    static createPredicateBuilder(modelDefinition) {\n        const { name: modelName } = modelDefinition;\n        const fieldNames = new Set(Object.keys(modelDefinition.fields));\n        const predicate = new Proxy({}, {\n            get(_target, propertyKey, receiver) {\n                const field = propertyKey;\n                if (!fieldNames.has(field)) {\n                    throw new Error(`Invalid field for model. field: ${String(field)}, model: ${modelName}`);\n                }\n                const result = (sortDirection) => {\n                    ModelSortPredicateCreator.sortPredicateGroupsMap\n                        .get(receiver)\n                        ?.push({ field, sortDirection });\n                    return receiver;\n                };\n                return result;\n            },\n        });\n        ModelSortPredicateCreator.sortPredicateGroupsMap.set(predicate, []);\n        return predicate;\n    }\n    static isValidPredicate(predicate) {\n        return ModelSortPredicateCreator.sortPredicateGroupsMap.has(predicate);\n    }\n    static getPredicates(predicate, throwOnInvalid = true) {\n        if (throwOnInvalid &&\n            !ModelSortPredicateCreator.isValidPredicate(predicate)) {\n            throw new Error('The predicate is not valid');\n        }\n        const predicateGroup = ModelSortPredicateCreator.sortPredicateGroupsMap.get(predicate);\n        if (predicateGroup) {\n            return predicateGroup;\n        }\n        else {\n            throw new Error('Predicate group not found');\n        }\n    }\n    // transforms cb-style predicate into Proxy\n    static createFromExisting(modelDefinition, existing) {\n        if (!existing || !modelDefinition) {\n            return undefined;\n        }\n        return existing(ModelSortPredicateCreator.createPredicateBuilder(modelDefinition));\n    }\n}\nexports.ModelSortPredicateCreator = ModelSortPredicateCreator;\nModelSortPredicateCreator.sortPredicateGroupsMap = new WeakMap();\n"],"names":[],"mappings":";;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,yBAAyB,GAAG,KAAK,CAAC,CAAC;AAC3C,MAAM,yBAAyB,CAAC;AAChC,IAAI,OAAO,sBAAsB,CAAC,eAAe,EAAE;AACnD,QAAQ,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,eAAe,CAAC;AACpD,QAAQ,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;AACxE,QAAQ,MAAM,SAAS,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE;AACxC,YAAY,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE;AAChD,gBAAgB,MAAM,KAAK,GAAG,WAAW,CAAC;AAC1C,gBAAgB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC5C,oBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,gCAAgC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7G,iBAAiB;AACjB,gBAAgB,MAAM,MAAM,GAAG,CAAC,aAAa,KAAK;AAClD,oBAAoB,yBAAyB,CAAC,sBAAsB;AACpE,yBAAyB,GAAG,CAAC,QAAQ,CAAC;AACtC,0BAA0B,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;AACzD,oBAAoB,OAAO,QAAQ,CAAC;AACpC,iBAAiB,CAAC;AAClB,gBAAgB,OAAO,MAAM,CAAC;AAC9B,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,yBAAyB,CAAC,sBAAsB,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AAC5E,QAAQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,gBAAgB,CAAC,SAAS,EAAE;AACvC,QAAQ,OAAO,yBAAyB,CAAC,sBAAsB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC/E,KAAK;AACL,IAAI,OAAO,aAAa,CAAC,SAAS,EAAE,cAAc,GAAG,IAAI,EAAE;AAC3D,QAAQ,IAAI,cAAc;AAC1B,YAAY,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE;AACpE,YAAY,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;AAC1D,SAAS;AACT,QAAQ,MAAM,cAAc,GAAG,yBAAyB,CAAC,sBAAsB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC/F,QAAQ,IAAI,cAAc,EAAE;AAC5B,YAAY,OAAO,cAAc,CAAC;AAClC,SAAS;AACT,aAAa;AACb,YAAY,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;AACzD,SAAS;AACT,KAAK;AACL;AACA,IAAI,OAAO,kBAAkB,CAAC,eAAe,EAAE,QAAQ,EAAE;AACzD,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,eAAe,EAAE;AAC3C,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC,yBAAyB,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC,CAAC;AAC3F,KAAK;AACL,CAAC;AACD,OAAO,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;AAC9D,yBAAyB,CAAC,sBAAsB,GAAG,IAAI,OAAO,EAAE;;"}