{"version":3,"file":"AsyncStorageAdapter.js","sources":["../../../../src/storage/adapter/AsyncStorageAdapter.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncStorageAdapter = void 0;\nconst tslib_1 = require(\"tslib\");\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst types_1 = require(\"../../types\");\nconst util_1 = require(\"../../util\");\nconst AsyncStorageDatabase_1 = tslib_1.__importDefault(require(\"./AsyncStorageDatabase\"));\nconst StorageAdapterBase_1 = require(\"./StorageAdapterBase\");\nclass AsyncStorageAdapter extends StorageAdapterBase_1.StorageAdapterBase {\n    async preSetUpChecks() {\n        // no-ops for AsyncStorageAdapter\n    }\n    async preOpCheck() {\n        // no-ops for AsyncStorageAdapter\n    }\n    /**\n     * Open AsyncStorage database\n     * Create new DB if one doesn't exist\n     *\n     * Called by `StorageAdapterBase.setUp()`\n     *\n     * @returns AsyncStorageDatabase instance\n     */\n    async initDb() {\n        const db = new AsyncStorageDatabase_1.default();\n        await db.init();\n        return db;\n    }\n    async clear() {\n        await this.db.clear();\n        this.db = undefined;\n        this.initPromise = undefined;\n    }\n    async batchSave(modelConstructor, items) {\n        if (items.length === 0) {\n            return [];\n        }\n        const modelName = modelConstructor.name;\n        const namespaceName = this.namespaceResolver(modelConstructor);\n        const storeName = (0, util_1.getStorename)(namespaceName, modelName);\n        const keys = (0, util_1.getIndexKeys)(this.schema.namespaces[namespaceName], modelName);\n        const batch = [];\n        for (const item of items) {\n            const model = this.modelInstanceCreator(modelConstructor, item);\n            const connectedModels = (0, util_1.traverseModel)(modelName, model, this.schema.namespaces[namespaceName], this.modelInstanceCreator, this.getModelConstructorByModelName);\n            const keyValuesPath = this.getIndexKeyValuesPath(model);\n            const { instance } = connectedModels.find(({ instance: connectedModelInstance }) => {\n                const instanceKeyValuesPath = this.getIndexKeyValuesPath(connectedModelInstance);\n                return (0, util_1.keysEqual)([instanceKeyValuesPath], [keyValuesPath]);\n            });\n            batch.push(instance);\n        }\n        return this.db.batchSave(storeName, batch, keys);\n    }\n    async _get(storeName, keyArr) {\n        const itemKeyValuesPath = keyArr.join(util_1.DEFAULT_PRIMARY_KEY_VALUE_SEPARATOR);\n        return (await this.db.get(itemKeyValuesPath, storeName));\n    }\n    async save(model, condition) {\n        const { storeName, connectionStoreNames, modelKeyValues } = this.saveMetadata(model);\n        const fromDB = await this._get(storeName, modelKeyValues);\n        this.validateSaveCondition(condition, fromDB);\n        const result = [];\n        for await (const resItem of connectionStoreNames) {\n            const { storeName: storeNameForRestItem, item, instance, keys } = resItem;\n            const itemKeyValues = keys.map(key => item[key]);\n            const fromDBForRestItem = (await this._get(storeNameForRestItem, itemKeyValues));\n            const opType = fromDBForRestItem ? types_1.OpType.UPDATE : types_1.OpType.INSERT;\n            if ((0, util_1.keysEqual)(itemKeyValues, modelKeyValues) ||\n                opType === types_1.OpType.INSERT) {\n                await this.db.save(item, storeNameForRestItem, keys, itemKeyValues.join(util_1.DEFAULT_PRIMARY_KEY_VALUE_SEPARATOR));\n                result.push([instance, opType]);\n            }\n        }\n        return result;\n    }\n    async query(modelConstructor, predicate, pagination) {\n        const { storeName, namespaceName, queryByKey, predicates, hasSort, hasPagination, } = this.queryMetadata(modelConstructor, predicate, pagination);\n        const records = (await (async () => {\n            if (queryByKey) {\n                const keyValues = queryByKey.join(util_1.DEFAULT_PRIMARY_KEY_VALUE_SEPARATOR);\n                const record = await this.getByKey(storeName, keyValues);\n                return record ? [record] : [];\n            }\n            if (predicates) {\n                const filtered = await this.filterOnPredicate(storeName, predicates);\n                return this.inMemoryPagination(filtered, pagination);\n            }\n            if (hasSort || hasPagination) {\n                const all = await this.getAll(storeName);\n                return this.inMemoryPagination(all, pagination);\n            }\n            return this.getAll(storeName);\n        })());\n        return this.load(namespaceName, modelConstructor.name, records);\n    }\n    async getByKey(storeName, keyValuePath) {\n        return (await this.db.get(keyValuePath, storeName));\n    }\n    async getAll(storeName) {\n        return this.db.getAll(storeName);\n    }\n    async filterOnPredicate(storeName, predicates) {\n        const { predicates: predicateObjs, type } = predicates;\n        const all = (await this.getAll(storeName));\n        const filtered = predicateObjs\n            ? all.filter(m => (0, util_1.validatePredicate)(m, type, predicateObjs))\n            : all;\n        return filtered;\n    }\n    inMemoryPagination(records, pagination) {\n        return (0, util_1.inMemoryPagination)(records, pagination);\n    }\n    async queryOne(modelConstructor, firstOrLast = types_1.QueryOne.FIRST) {\n        const storeName = this.getStorenameForModel(modelConstructor);\n        const result = (await this.db.getOne(firstOrLast, storeName));\n        return result && this.modelInstanceCreator(modelConstructor, result);\n    }\n    async deleteItem(deleteQueue) {\n        for await (const deleteItem of deleteQueue) {\n            const { storeName, items } = deleteItem;\n            for await (const item of items) {\n                if (item) {\n                    if (typeof item === 'object') {\n                        const keyValuesPath = this.getIndexKeyValuesPath(item);\n                        await this.db.delete(keyValuesPath, storeName);\n                    }\n                }\n            }\n        }\n    }\n    // #region platform-specific helper methods\n    /**\n     * Retrieves concatenated primary key values from a model\n     *\n     * @param model\n     * @returns\n     */\n    getIndexKeyValuesPath(model) {\n        return this.getIndexKeyValuesFromModel(model).join(util_1.DEFAULT_PRIMARY_KEY_VALUE_SEPARATOR);\n    }\n}\nexports.AsyncStorageAdapter = AsyncStorageAdapter;\nexports.default = new AsyncStorageAdapter();\n"],"names":[],"mappings":"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"}